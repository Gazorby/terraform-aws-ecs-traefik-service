---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-ecs-traefik-service

# Tags of this project
tags:
  - aws
  - terraform
  - terraform-modules
  - ecs
  - traefik

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Canonical GitHub repo
github_repo: aleks-fofanov/terraform-aws-ecs-traefik-service

# Badges to display
badges:
  - name: "Build Status"
    image: "https://travis-ci.org/aleks-fofanov/terraform-aws-ecs-traefik-service.svg?branch=master"
    url: "https://travis-ci.org/aleks-fofanov/terraform-aws-ecs-traefik-service"
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/aleks-fofanov/terraform-aws-ecs-traefik-service.svg"
    url: "https://github.com/aleks-fofanov/terraform-aws-ecs-traefik-service/releases/latest"

related:
  - name: "terraform-aws-ecs-cluster-traefik"
    description: "Terraform module to provision ECS cluster with as an edge router"
    url: "https://github.com/aleks-fofanov/terraform-aws-ecs-cluster-traefik"

# Short description of this project
description: |-
  Terraform module to provision [Traefik](https://traefik.io/) service in ECS.
  This module supports [traefik v1.7](https://docs.traefik.io/v1.7/).

  ### Terraform versions

  Terraform 0.12. Pin module version to `~> 2.0`. Submit pull-requests to `master` branch.

  Terraform 0.11. Pin module version to `~> 1.0`. Submit pull-requests to `terraform011` branch.

introduction: |-
  Traefik service in ECS is supposed to act as an edge router and route traffic to other containers in your ECS cluster
  based on their docker lables.

  For more information on which docker labels to set on your container, see
  [Traefik documentation](https://docs.traefik.io/v1.7/configuration/backends/docker/#on-containers).

  SSL termination is supposed to be done on AWS ALB. Traefik tasks are launched with `awsvpc` network mode and needs
  Internet access to connect to ECS API in order to discover containers in your ECS cluster.

  This module is backed by best of breed terraform modules maintained by [Cloudposse](https://github.com/cloudposse).

# How to use this project
usage: |-
  This example creates a Traefik service in ECS launched in `us-west-2` region using `FARGATE`.

  ```hcl
  module "traefik" {
    source    = "git::https://github.com/aleks-fofanov/terraform-aws-ecs-traefik-service.git?ref=master"
    name      = "traefik"
    namespace = "cp"
    stage     = "prod"

    ecs_cluster_name      = "XXXXXXXXXXX"
    ecs_cluster_arn       = "XXXXXXXXXXX"
    ecs_cluster_region    = "us-west-2"
    alb_security_group_id = "XXXXXXXXXXX"
    alb_target_group_arn  = "XXXXXXXXXXX"
    vpc_id                = "XXXXXXXXXXX"
    subnet_ids            = ["XXXXXXXXXXX", "XXXXXXXXXXX", ..]

    launch_type      = "FARGATE"
    assign_public_ip = true
  }
  ```

examples: |-
  ### Example With [Traefik Dashboard](https://docs.traefik.io/v1.7/configuration/api/) Enabled

  This example launches a Traefik setvice in ECS using `FARGATE` with enabled dashboard and API endpoints.
  Basic auth is enabled by default for both. You can use `openssl` to generate password for basic auth:
  ```bash
  openssl passwd -apr1
  ```

  ```hcl
  module "traefik" {
    source    = "git::https://github.com/aleks-fofanov/terraform-aws-ecs-traefik-service.git?ref=master"
    name      = "traefik"
    namespace = "cp"
    stage     = "prod"

    ecs_cluster_name      = "XXXXXXXXXXX"
    ecs_cluster_arn       = "XXXXXXXXXXX"
    ecs_cluster_region    = "us-west-2"
    alb_security_group_id = "XXXXXXXXXXX"
    alb_target_group_arn  = "XXXXXXXXXXX"
    vpc_id                = "XXXXXXXXXXX"
    subnet_ids            = ["XXXXXXXXXXX", "XXXXXXXXXXX", ..]

    launch_type      = "FARGATE"
    assign_public_ip = true

    dashboard_enabled             = true
    dashboard_host                = "traefik.example.com"
    dashboard_basic_auth_user     = "admin"
    dashboard_basic_auth_password = "$$$apr1$$$Rj21EpGU$$$KCwTHCbAIVhw0BiSdU4Me0"
  }
  ```

  ### Complete Example

  This example:

  * Launches Traefik service in ECS using FARGATE
  * Enables Traefik API and dashboard
  * Enables Traefik service autoscaling based on CPU usage

  ```hcl
  module "traefik" {
    source    = "git::https://github.com/aleks-fofanov/terraform-aws-ecs-traefik-service.git?ref=master"
    name      = "traefik"
    namespace = "cp"
    stage     = "prod"

    ecs_cluster_name      = "XXXXXXXXXXX"
    ecs_cluster_arn       = "XXXXXXXXXXX"
    ecs_cluster_region    = "us-west-2"
    alb_security_group_id = "XXXXXXXXXXX"
    alb_target_group_arn  = "XXXXXXXXXXX"
    vpc_id                = "XXXXXXXXXXX"
    subnet_ids            = ["XXXXXXXXXXX", "XXXXXXXXXXX", ..]

    launch_type      = "FARGATE"
    assign_public_ip = true

    dashboard_enabled             = true
    dashboard_host                = "traefik.example.com"
    dashboard_basic_auth_user     = "admin"
    dashboard_basic_auth_password = "$$$apr1$$$Rj21EpGU$$$KCwTHCbAIVhw0BiSdU4Me0"

    autoscaling_enabled               = true
    autoscaling_dimension             = "cpu"
    autoscaling_min_capacity          = 1
    autoscaling_max_capacity          = 3
    autoscaling_scale_up_cooldown     = 60
    autoscaling_scale_down_cooldown   = 60

    ecs_alarms_enabled                        = true
    ecs_alarms_cpu_utilization_high_threshold = 20
    ecs_alarms_cpu_utilization_low_threshold  = 10
  }
  ```

include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Aleksandr Fofanov"
    github: "aleks-fofanov"
